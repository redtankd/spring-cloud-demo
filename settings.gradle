pluginManagement {
    resolutionStrategy {
        eachPlugin {
            if ("org.springframework.boot" == requested.id.toString()) {
                useModule("org.springframework.boot:spring-boot-gradle-plugin:${requested.version}")
            }
            if ("org.junit.platform.gradle.plugin" == requested.id.toString()) {
                useModule("org.junit.platform:junit-platform-gradle-plugin:${requested.version}")
            }
        }
    }
    repositories {
        gradlePluginPortal()
        maven { url "https://repo.maven.apache.org/maven2/" }
        maven { url "https://repo.spring.io/plugins-snapshot/" }

    }
}

rootProject.name = "cloud-demo"

include 'common'
include 'datanode'
include 'rfqservice'
include 'gateway'
include 'testclient'
include 'config-server'